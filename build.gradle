plugins {
	id 'org.springframework.boot' version '2.5.11'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.auxil'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}


bootJar {
	enabled = false
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'


	sourceCompatibility = '11'

	repositories {
		mavenCentral()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}





	dependencies {
		//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
		//	implementation 'net.logstash.logback:logstash-logback-encoder:4.11'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		runtimeOnly 'com.h2database:h2'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
		//implementation 'org.springframework.boot:spring-boot-starter-jdbc'


		
		
		// 유레카 클라이언트
//		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server'
	}
}

project(':module-pump') {
	// 향후 common 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
	dependencies {


		implementation 'io.jsonwebtoken:jjwt:0.9.1'
		implementation 'org.springframework.boot:spring-boot-starter-validation'



		implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
		implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

		// modbus 통신 오픈소스
		implementation group: 'com.digitalpetri.modbus', name: 'modbus-master-tcp', version: '1.2.0'
		implementation group: 'com.digitalpetri.modbus', name: 'modbus-slave-tcp', version: '1.2.0'

		// spring - redis
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
		implementation group: 'org.springframework.session', name: 'spring-session-data-redis'

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '3.0.4'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-security'

	}
}

project(':module-middle') {
	// 향후 middle 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
	dependencies {

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-batch'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '3.0.4'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


		// spring - redis
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
		implementation group: 'org.springframework.session', name: 'spring-session-data-redis'
		// modbus 통신 오픈소스
		implementation group: 'com.digitalpetri.modbus', name: 'modbus-master-tcp', version: '1.2.0'
		implementation group: 'com.digitalpetri.modbus', name: 'modbus-slave-tcp', version: '1.2.0'

		compileOnly project(':module-pump')


	}
}


project(':module-eureka') {
	// 향후 eureka 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '3.0.4'
//		implementation group: 'com.sun.jersey.contribs' , name: 'jersey-apache-client4' , version: '1.19.4'
	}
}

project(':module-gateway') {
	// 향후 gateway 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
	dependencies {
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-gateway' , version: '3.0.4'
		implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '3.0.4'



	}
}






//project(':module-eurekaServer') {
//	// 향후 eurekaServer 모듈에만 필요한 라이브러리가 발생하면 이곳에 추가한다.
//
//
//
//
//	dependencies {
//		implementation project(':module-pump')
//
//	}
//
//
//
//
//}




tasks.named('test') {
	useJUnitPlatform()
}
